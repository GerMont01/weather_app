{"version":3,"sources":["icons/background1.jpg","context.js","icons/close.svg","components/weather.js","components/currency.js","icons/refresh.svg","components/city.js","components/forecast.js","components/sightseeing.js","components/nav.js","components/cities.js","components/settings.js","Footer/footer.js","App.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","cities","some","city","name","payload","push","localStorage","setItem","JSON","stringify","filter","id","showForecast","showSightseeing","base_amount","amount","active","sightseeing","handleCurrency","base","unit","settings","Provider","units","forecast","country","data","fetchForcastAndSightseeing","forecastCity","getSightseeing","newState","setState","handlefetchData","cityname","fetchData","newCities","getCurrency","then","rate","catch","err","alert","console","log","dispatch","epoch","d","Date","h","getUTCHours","m","getUTCMinutes","offset","current","getTime","day","getUTCDate","month","getUTCMonth","year","getUTCFullYear","fetch","this","response","status","json","cityData","uuid","description","weather","charAt","toUpperCase","slice","sys","temp","Math","round","main","temp_min","temp_max","humidity","date","convertDate","timezone","time","convertTime","sunrise","getSunRise","sunset","iconurl","icon","code","length","substring","currency_code","cityforecast","i","x","list","dt","a","fetch_country","json_country","country_name","fetch_currency","currency_json","country_data","find","Entity","toLowerCase","includes","Alphabetic_Code","fetch_exchange","json_exchange","conversion_rate","api_key1","fetch_Coord","coord_json","lon","coord","lat","fetch_Sightseeing","sightseeing_json","currentSights","features","properties","xid","fetch_sights","sights_json","wikipedia_extracts","sights","content","html","sight","image","preview","source","getItem","parse","map","document","getElementById","style","backgroundImage","BgImage","value","props","children","Component","Consumer","Weather","useState","useContext","className","onClick","src","Currency","setBase_amount","htmlFor","onChange","e","target","City","setCities","useEffect","alt","Refresh","window","location","reload","onKeyDown","key","placeholder","autoComplete","Close","Forecast","element","index","height","Sightseeing","width","Nav","borderBottom","Cities","Settings","input","setInput","color","file","files","reader","FileReader","onloadend","result","readAsDataURL","readURL","Footer","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.23d2db1b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/background1.686c9f60.jpg\";","import React from \"react\";\r\nimport uuid from \"react-uuid\";\r\nimport BgImage from \"./icons/background1.jpg\"\r\n\r\nexport const Context = React.createContext();\r\n// Reducer --------------------------------------------------------------------\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_CITY':\r\n            if (!state.cities.some((city)=>city.name===action.payload.name)) {\r\n                state.cities.push(action.payload);\r\n            }\r\n            localStorage.setItem('data',JSON.stringify(state));\r\n            return {\r\n                ...state,\r\n            };\r\n        case 'DELETE':\r\n            state.cities = state.cities.filter((city)=>city.id!==action.payload)\r\n            localStorage.setItem('data',JSON.stringify(state));\r\n            return {\r\n                ...state\r\n            };\r\n        case 'TOGGLE_FORECAST':\r\n            return {\r\n                ...state,\r\n                showForecast: action.payload\r\n            }\r\n        case 'TOGGLE_SIGHTSEEING':\r\n            return {\r\n                ...state,\r\n                showSightseeing: action.payload\r\n            }\r\n        case 'CHANGE_BASE#':\r\n            for (let city of state.cities) {\r\n                if (city.id === action.payload.id) {\r\n                    city.base_amount = action.payload.amount;\r\n                }\r\n            }\r\n            return {\r\n                ...state\r\n            }\r\n        case 'ACTIVE_TAB':\r\n            return {\r\n                ...state,\r\n                active: action.payload\r\n            }\r\n        case 'EMPTY_S':\r\n            return {\r\n                ...state,\r\n                sightseeing: []\r\n            }\r\n        case 'SET_BASE':\r\n            state.handleCurrency(action.payload);\r\n            return {\r\n                ...state,\r\n                base: action.payload\r\n            }\r\n        case 'SET_UNIT':\r\n            return {\r\n                ...state,\r\n                unit: action.payload\r\n            }\r\n        case 'TOGGLE_SETTINGS':\r\n            return {\r\n                ...state,\r\n                settings: action.payload\r\n            }\r\n        default:\r\n            return {\r\n                ...state\r\n            };\r\n        };\r\n}\r\n\r\n// Component -------------------------------------------------------------------------\r\nexport default class Provider extends React.Component {\r\n    state = {\r\n        settings: false,\r\n        cities:[],\r\n        unit: 'C',\r\n        units:'metric',\r\n        forecast: {\r\n            name: '',\r\n            country: '',\r\n            data: []\r\n        },\r\n        sightseeing: [],\r\n        showForecast: false,\r\n        showSightseeing: false,\r\n        active: 'weather',\r\n        base: 'CAD',\r\n        fetchForcastAndSightseeing: (name) => {\r\n            this.forecastCity(name);\r\n            this.getSightseeing(name);\r\n            let newState = this.state;\r\n            newState.showForecast = true;\r\n            this.setState(newState);\r\n        },\r\n        handlefetchData: (cityname) => {\r\n            this.fetchData(cityname);\r\n        }, \r\n        handleCurrency: (base) => {\r\n            let newCities = this.state.cities;\r\n            for (let city of newCities) {\r\n                this.getCurrency(city.country, base).then(amount => {\r\n                    city.rate = amount.rate;\r\n                    this.setState({cities: newCities});\r\n                    localStorage.setItem('data',JSON.stringify(this.state));\r\n                }).catch(err => {\r\n                    alert('Enter a valid currency code')\r\n                    console.log(`We have some error ${err}`)\r\n                }) \r\n            }  \r\n        },\r\n        dispatch: (action) => {\r\n            this.setState((state) => reducer(state, action));\r\n        }\r\n    };\r\n    \r\n    getSunRise(epoch){\r\n        let d = new Date(epoch *1000);\r\n        let h = d.getUTCHours();\r\n        let m = d.getUTCMinutes();\r\n        return `${h}:${m}`\r\n    }\r\n    convertDate(offset) {\r\n        let current = new Date().getTime() / 1000\r\n        let epoch = current + offset;\r\n        let d = new Date(epoch *1000);\r\n        let day = d.getUTCDate();\r\n        let month = d.getUTCMonth() + 1;\r\n        let year = d.getUTCFullYear();\r\n        return `${month}/${day}/${year}`\r\n    }\r\n    convertTime(offset) {\r\n        let current = new Date().getTime() / 1000\r\n        let epoch = current + offset;\r\n        let d = new Date(epoch *1000);\r\n        let h = d.getUTCHours();\r\n        let m = d.getUTCMinutes();\r\n        return `${h}:${m}`\r\n    }\r\n  \r\n    fetchData(cityname) {\r\n        fetch(`https://api.openweathermap.org/data/2.5/weather?q=${cityname}&units=${this.state.units}&appid=bced9de0c38c91650f8270abf3db9fed`).then(response => {\r\n            if(response.status !== 200) {\r\n                console.log(`We have some errors ${response.status}`);\r\n                return;\r\n            }\r\n            response.json().then(city => {\r\n                const cityData = {\r\n                    id: uuid(),\r\n                    description : city.weather[0].description.charAt(0).toUpperCase() + city.weather[0].description.slice(1),\r\n                    name : cityname.charAt(0).toUpperCase() + cityname.slice(1),\r\n                    country : city.sys.country,\r\n                    temp : Math.round(city.main.temp),\r\n                    temp_min : Math.round(city.main.temp_min),\r\n                    temp_max : Math.round(city.main.temp_max),\r\n                    humidity : city.main.humidity,\r\n                    date : this.convertDate(city.timezone),\r\n                    time : this.convertTime(city.timezone),\r\n                    sunrise : this.getSunRise(city.sys.sunrise + city.timezone),\r\n                    sunset : this.getSunRise(city.sys.sunset + city.timezone),\r\n                    iconurl : `https://openweathermap.org/img/w/${city.weather[0].icon}.png`,\r\n                    base_amount:1,\r\n                    rate: 0,\r\n                    code: ''\r\n                }\r\n                if (cityData.name.length > 9){\r\n                    cityData.name= cityData.name.substring(0, 9)\r\n                }\r\n                this.getCurrency(city.sys.country, this.state.base).then(amount => {\r\n                    cityData.rate = amount.rate;\r\n                    cityData.code = amount.currency_code;\r\n                    this.state.dispatch({ type:'ADD_CITY', payload: cityData});\r\n                });\r\n            }).catch(err => {\r\n                console.log(`We have some error ${err}`)\r\n            })\r\n        })\r\n    }\r\n    forecastCity(cityname) {\r\n        fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${cityname}&units=metric&cnt=8&appid=bced9de0c38c91650f8270abf3db9fed`).then(response => {\r\n            if(response.status !== 200) {\r\n                console.log(`We have some errors ${response.status}`);\r\n                return;\r\n            }\r\n            response.json().then(cityforecast => {\r\n                const forecast = {\r\n                    name : cityname.charAt(0).toUpperCase() + cityname.slice(1),\r\n                    country: cityforecast.city.country,\r\n                    data: []\r\n                }\r\n                if (forecast.name.length > 9){\r\n                    forecast.name= forecast.name.substring(0, 9)\r\n                } \r\n                for (let i=0;i<8;i++){\r\n                    let x = {\r\n                        description: cityforecast.list[i].weather[0].description.charAt(0).toUpperCase() + cityforecast.list[i].weather[0].description.slice(1),\r\n                        temp: Math.round(cityforecast.list[i].main.temp),\r\n                        humidity: cityforecast.list[i].main.humidity,\r\n                        time: cityforecast.list[i].dt,\r\n                        timezone: cityforecast.city.timezone,\r\n                        iconurl: `https://openweathermap.org/img/w/${cityforecast.list[i].weather[0].icon}.png`\r\n                    }\r\n                    forecast.data.push(x);\r\n                }\r\n                this.setState({forecast:forecast});\r\n            }).catch(err => {\r\n                console.log(`We have some error ${err}`)\r\n            })\r\n        })\r\n    }\r\n\r\n    async getCurrency(country,base) {\r\n        try {\r\n            const fetch_country = await fetch(`https://restcountries.eu/rest/v2/alpha/${country}`);\r\n            const json_country = await fetch_country.json();\r\n            const country_name = await json_country.name;\r\n            const fetch_currency = await fetch('https://pkgstore.datahub.io/JohnSnowLabs/iso-4217-currency-codes/iso-4217-currency-codes-csv_json/data/248f953387d4218576d846696fc54adf/iso-4217-currency-codes-csv_json.json')\r\n            const currency_json = await fetch_currency.json();\r\n            const country_data = currency_json.find(data => data.Entity.toLowerCase().includes(country_name.toLowerCase()) === true);\r\n            const currency_code = country_data.Alphabetic_Code;\r\n            const fetch_exchange = await fetch(`https://v6.exchangerate-api.com/v6/e383d57ae359f0928f0da2d2/pair/${base}/${currency_code}`);\r\n            const json_exchange = await fetch_exchange.json();\r\n            const rate = json_exchange.conversion_rate;\r\n            if (rate){\r\n                return {currency_code, rate};\r\n            } \r\n        }\r\n        catch(error) {\r\n            alert('Enter a valid currency code')\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    async getSightseeing(cityname) {\r\n        const api_key1 = '5ae2e3f221c38a28845f05b669931f2de602806c1d15cc8f826b0d32';\r\n        try {\r\n            const fetch_Coord = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${cityname}&appid=bced9de0c38c91650f8270abf3db9fed`);\r\n            const coord_json = await fetch_Coord.json();\r\n            const lon = coord_json.coord.lon;\r\n            const lat = coord_json.coord.lat;\r\n            const fetch_Sightseeing = await fetch(`https://api.opentripmap.com/0.1/en/places/radius?radius=2000&lon=${lon}&lat=${lat}&rate=3&limit=5&apikey=${api_key1}`);\r\n            const sightseeing_json = await fetch_Sightseeing.json();\r\n            const currentSights = this.state.sightseeing;\r\n            for (let i=0;i<5;i++) {\r\n                let id = sightseeing_json.features[i].properties.xid;\r\n                const fetch_sights = await fetch(`https://api.opentripmap.com/0.1/en/places/xid/${id}?apikey=${api_key1}`);\r\n                const sights_json = await fetch_sights.json();\r\n                if (sights_json.wikipedia_extracts) {\r\n                    const sights = {\r\n                        content: sights_json.wikipedia_extracts.html,\r\n                        sight: sights_json.name,\r\n                        image: sights_json.preview.source\r\n                    };\r\n                    currentSights.push(sights); \r\n                }\r\n            } \r\n            this.setState({\r\n                sightseeing: currentSights\r\n            }); \r\n        }\r\n        catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        if (localStorage.getItem('data')){\r\n            JSON.parse(localStorage.getItem('data')).cities.map(city => this.fetchData(city.name));\r\n            this.setState({ base: JSON.parse(localStorage.getItem('data')).base });\r\n        }\r\n        if (localStorage.getItem('background')) {\r\n            document.getElementById('body').style.backgroundImage = \"url(\" + localStorage.getItem('background') + \")\";\r\n        } else {\r\n            document.getElementById('body').style.backgroundImage = `url(${BgImage})`;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\n    \r\nexport const Consumer = Context.Consumer;\r\n  ","export default __webpack_public_path__ + \"static/media/close.5e99f6e3.svg\";","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Context } from \"../context\";\r\n\r\nexport default function Weather(props) {\r\n    const [city, setCity] = useState(props.city);\r\n\r\n    const data = useContext(Context);\r\n    return(\r\n\r\n        <div className=\"weather\" onClick={()=> data.fetchForcastAndSightseeing(city.name)} key={city.id + 'weather'}>\r\n            <h2>{city.date} {city.time}</h2>\r\n            <div className=\"temp\">\r\n            {(data.unit === 'C') ? (\r\n            <>\r\n                <span className=\"temp1\">{city.temp}°{data.unit}</span><br /><span>{city.temp_min}°-{city.temp_max}°{data.unit}</span>\r\n            </>\r\n            ):(\r\n            <>\r\n                <span className=\"temp1\">{Math.round((city.temp* 9/5) + 32)}°{data.unit}</span><br /><span>{Math.round((city.temp_min* 9/5) + 32)}°-{Math.round((city.temp_max* 9/5) + 32)}°{data.unit}</span>\r\n            </>\r\n            )}\r\n            </div>\r\n            <div className=\"desc\">\r\n                <img src={city.iconurl} /><span>{city.description}</span>\r\n            </div>\r\n            <div className=\"sun\">\r\n                <i className=\"fas fa-sun\"></i><span>{city.sunrise}</span><br />\r\n                <i className=\"far fa-moon\"></i><span>{city.sunset}</span>\r\n            </div>\r\n            <div className=\"humidity\">\r\n                <i className=\"fas fa-tint\"></i><span> {city.humidity}%</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { Context } from \"../context\";\r\nimport './currency.scss';\r\n\r\n\r\nexport default function Currency(props) {\r\n    const [city,setCity] = useState(props.city);\r\n    const [base_amount,setBase_amount] = useState(1);\r\n    const data = useContext(Context);\r\n\r\n    return(\r\n        <div className=\"currExchange\" key={city.id + 'currency'}>\r\n            <label htmlFor=\"base_amount\">{data.base.toUpperCase()}</label><br/>\r\n            <input type=\"number\" className=\"base_amount\" value={base_amount} onChange={(e)=> setBase_amount(e.target.value)}/>\r\n            <br/>\r\n            <label htmlFor=\"target_amount\">{city.code}</label><br/>\r\n            <input type=\"number\" className=\"target_amount\" value={city.rate * base_amount} onChange={(e)=>setBase_amount(e.target.value/city.rate)}/>\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/refresh.9d7fccf8.svg\";","import React, { useContext, useEffect, useState} from \"react\";\r\nimport { Context } from \"../context\";\r\nimport './city.scss'\r\nimport Close from '../icons/close.svg'\r\nimport Weather from \"./weather\";\r\nimport Currency from \"./currency\";\r\nimport Refresh from '../icons/refresh.svg';\r\nimport { TiWeatherPartlySunny } from 'react-icons/ti'\r\nimport { FcCurrencyExchange } from 'react-icons/fc';\r\n\r\nexport default function City() {\r\n    const data = useContext(Context);\r\n    const [cities,setCities] = useState(data.cities);\r\n    useEffect(()=>{\r\n        setCities(data.cities)\r\n    },[data])\r\n    return(\r\n        <>\r\n            <>\r\n                <div className='changeInfo'>\r\n                    <TiWeatherPartlySunny onClick={()=>data.dispatch({type:'ACTIVE_TAB',payload:'weather'})}/> / <FcCurrencyExchange onClick={()=>data.dispatch({type:'ACTIVE_TAB',payload:'currency'})}/>  \r\n                </div>\r\n                <img className='refresh' alt='' src={Refresh} onClick={()=>window.location.reload()}/>\r\n                <div id='searchbar'>\r\n                    <i className=\"fas fa-search\"></i>\r\n                    <input onKeyDown={(e)=>{if(e.key === 'Enter'){data.handlefetchData(e.target.value); e.target.value=''}}} type=\"text\" id=\"addCity\" placeholder=\"Add City\" autoComplete='off'/>\r\n                </div>\r\n            </>\r\n            {cities.map((city) => (\r\n                <div className=\"city\" key={city.id} id={city.id}>\r\n                    <h1 onClick={()=> data.fetchForcastAndSightseeing(city.name)}>{city.name}, {city.country}</h1>\r\n                    {data.active==='weather'? (\r\n                        <Weather city={city} />\r\n                    ):(\r\n                        <Currency city={city} />\r\n                    )}\r\n                    <img src={Close} className='close' alt='close' onClick={()=>data.dispatch({type:'DELETE', payload:city.id})}/>\r\n                </div>\r\n            \r\n            ))}\r\n        </>\r\n    )\r\n}","import React from \"react\";\r\nimport { Consumer } from \"../context\";\r\nimport './forecast.scss';\r\n\r\nexport default function Forecast() {\r\n    const convertTime = (date, offset) => {\r\n        console.log(date,offset)\r\n        let epoch = date + offset;\r\n        let d = new Date(epoch *1000);\r\n        let day = d.getUTCDate();\r\n        let month = d.getUTCMonth() + 1;\r\n        let year = d.getUTCFullYear();\r\n        let h = d.getUTCHours();\r\n        return `${month}/${day}/${year} ${h}:00`\r\n    }\r\n    return(\r\n        <Consumer> \r\n            \r\n            {(value) => (\r\n            <>\r\n            <div key='forecast' className='forecastContainer'>\r\n                <h1>{value.forecast.name}, {value.forecast.country}</h1>\r\n                <table id=\"table\">\r\n                    <thead>\r\n                        <tr><td>Time</td><td>Temperature</td><td>Description</td><td>Humidity</td></tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {value.forecast.data.map((element,index)=>\r\n                            <tr key={index}>\r\n                                <td>{convertTime(element.time, element.timezone)}</td>\r\n                                {(value.unit === 'C') ? (<td>{element.temp}°C</td>):(<td>{(element.temp * 9/5) + 32}°F</td>)}\r\n                                <td><img src={element.iconurl} height='50px' alt='icon'/><span>{element.description}</span></td>\r\n                                <td><i className=\"fas fa-tint\"></i><span>{element.humidity}%</span></td>\r\n                            </tr>\r\n                        )}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            </>\r\n            )}\r\n        </Consumer>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { Consumer } from \"../context\";\r\nimport './sightseeing.scss';\r\nimport parse from 'html-react-parser';\r\n\r\n\r\nexport default function Sightseeing() {\r\n    return(\r\n        <Consumer> \r\n            {(value) => (\r\n                <div className=\"sightcontainer\">\r\n                    {value.sightseeing.length > 0 ? (\r\n                        <>\r\n                        {value.sightseeing.map(sight => (\r\n                            <>\r\n                                {console.log(sight)}\r\n                                <h2>{sight.sight}</h2>\r\n                                <img src={sight.image} alt={sight.sight} height='100px' width='150px'/>\r\n                                {parse(sight.content)}\r\n                            </>\r\n                        ))}\r\n                        </>\r\n                    ) : (\r\n                        <p>Loading...</p>\r\n                    )}\r\n                       \r\n                </div>\r\n            )}\r\n        </Consumer>\r\n    )\r\n}\r\n\r\n","import React, { useEffect, useContext } from \"react\";\r\nimport './nav.scss'\r\nimport { Context } from \"../context\";\r\n\r\nexport default function Nav() {\r\n\r\n    const data = useContext(Context);\r\n\r\n    useEffect(()=>{\r\n        if (data.showForecast === true) {\r\n            document.getElementById('F').style.borderBottom = '3px solid white';\r\n            document.getElementById('S').style.borderBottom = 'none';\r\n        }\r\n        if (data.showSightseeing === true) {       \r\n            document.getElementById('S').style.borderBottom = '3px solid white';\r\n            document.getElementById('F').style.borderBottom = 'none';\r\n        }\r\n    },[data.showForecast],[data.showSightseeing]);\r\n    return (\r\n        <div className='nav'>\r\n            <p id='F' onClick={()=>{\r\n                data.dispatch({ type: 'TOGGLE_FORECAST', payload: true});\r\n                data.dispatch({ type: 'TOGGLE_SIGHTSEEING', payload: false});\r\n            }}>Forecast</p>\r\n            <p id='S' onClick={()=>{\r\n                data.dispatch({ type: 'TOGGLE_SIGHTSEEING', payload: true});\r\n                data.dispatch({ type: 'TOGGLE_FORECAST', payload: false});\r\n            }}>Sightseeing</p>\r\n        </div>\r\n    )\r\n}","import City from './city';\r\nimport './cities.scss';\r\nimport { Consumer } from \"../context\";\r\nimport Forecast from './forecast';\r\nimport Sightseeing from './sightseeing';\r\nimport Nav from './nav';\r\nimport Close from '../icons/close.svg';\r\n\r\nexport default function Cities() {\r\n    return (\r\n      <Consumer>\r\n        {(value) => (\r\n            <>\r\n            <div className='container'>\r\n              {value.showForecast ? (\r\n                <Forecast />\r\n              ):value.showSightseeing ? (\r\n                <Sightseeing />\r\n              ):(\r\n                <City />\r\n              )}\r\n            </div>\r\n            {value.showForecast || value.showSightseeing ? (\r\n              <>\r\n                <img src={Close} className='closeFS' alt='close' onClick={()=>{\r\n                  value.dispatch({type: 'EMPTY_S'}); \r\n                  value.dispatch({type:'TOGGLE_SIGHTSEEING', payload: false});\r\n                  value.dispatch({type:'TOGGLE_FORECAST', payload: false})\r\n                  }}/>\r\n                <Nav/>\r\n              </>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            </>\r\n        )}\r\n      </Consumer>\r\n    );\r\n   \r\n}","import React, { useContext, useEffect, useState } from \"react\";\r\nimport './settings.scss';\r\nimport { Context } from \"../context\";\r\nimport { RiCloseLine } from 'react-icons/ri';\r\nimport { IoSettingsSharp } from 'react-icons/io5'\r\n\r\nexport default function Settings() {\r\n    const data = useContext(Context);\r\n    const [input, setInput] = useState(data.base);\r\n\r\n    useEffect(()=>{\r\n        setInput(data.base);\r\n    },[data.base])\r\n    useEffect(() => {\r\n        if (data.settings) {\r\n            if (data.unit === 'C') {\r\n                document.getElementById('celsius').style.color = 'white';\r\n                document.getElementById('farenheit').style.color = 'black';\r\n            } else {\r\n                document.getElementById('celsius').style.color = 'black';\r\n                document.getElementById('farenheit').style.color = 'white';\r\n            }\r\n        }\r\n    },[data.unit],[data.settings])\r\n\r\n    function readURL(){\r\n        var file = document.getElementById(\"getval\").files[0];\r\n        var reader = new FileReader();\r\n        reader.onloadend = function(){\r\n             localStorage.setItem('background',reader.result);\r\n             document.getElementById('body').style.backgroundImage = \"url(\" + reader.result + \")\";        \r\n        }\r\n        if(file){\r\n             reader.readAsDataURL(file);\r\n        }\r\n    }\r\n    return(\r\n        <div className=\"settings\">\r\n            {data.settings ? (\r\n                <>\r\n                <div className=\"content\">\r\n                    <h1>Settings</h1>\r\n                    <label htmlFor=\"base_input\">Base Currency</label>\r\n                    <input id=\"base_input\" type=\"text\" placeholder=\"Enter Currency\" value={input} onChange={(e)=>setInput(e.target.value)} onKeyDown={(e)=>\r\n                        {\r\n                            if (e.key === 'Enter'){\r\n                                if (e.target.value.length === 3) { \r\n                                    data.dispatch({type:\"SET_BASE\", payload:e.target.value})\r\n                                    \r\n                                }\r\n                                else {\r\n                                    alert('Enter a valid Currency of 3 digits')\r\n                                }\r\n                            }\r\n                        }}/> \r\n                    <p>Temperature Units: <span id=\"celsius\" onClick={()=>data.dispatch({type: 'SET_UNIT', payload: 'C'})}>C°</span> / <span id=\"farenheit\" onClick={()=>data.dispatch({type: 'SET_UNIT', payload: 'F'})}>F°</span></p>\r\n                    <label htmlFor='getval'>Change Background</label>\r\n                    <input type='file' id='getval' name=\"background-image\" onChange={()=>readURL()}/><br/>\r\n                </div>\r\n                <RiCloseLine className ='closeSettings' onClick={()=>data.dispatch({type:'TOGGLE_SETTINGS', payload:false})}/>\r\n                </>\r\n            ):(\r\n                <IoSettingsSharp className='settingsIcon' onClick={()=>data.dispatch({type:'TOGGLE_SETTINGS', payload:true})}/>\r\n            )}\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport Settings from \"../components/settings\";\r\nimport './footer.scss'\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <>\r\n            <Settings />\r\n            <footer>Gerardo Montero ©</footer>\r\n        </>\r\n    )\r\n}","import './App.css';\r\nimport Provider from './context';\r\nimport Cities from './components/cities';\r\nimport Footer from './Footer/footer';\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider>\r\n      <Cities/>\r\n      <Footer />\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}